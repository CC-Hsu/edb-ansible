---
# configure variables
- name: Display current node to install
  block:
    - debug:
        msg: "operating system = {{ os }}:
             postgres version = {{ pg_version }},
             database engine = {{ pg_type }},
             public ip = {{ ansible_host }}"

# setting variables available for all nodes
# any of the variables existing can be updated and configured

- name: Set force_initdb based on the user input
  set_fact:
    force_initdb: "{{ hostvars[inventory_hostname].force_initdb }}"
  when: hostvars[inventory_hostname].force_initdb is defined
  register: output

# main blog for tasks
- name: Force cleanup based on force_initdb
  block:
    - include_tasks: rm_initdb.yml
  when: force_initdb
  become: yes

- name: Update etc_hosts based on use_hostname
  block:
    - import_tasks: linux_update_etc_hosts.yml
  become: yes
  when: use_hostname

- name: Check and configure the node as primary or pemserver
  block:
    - import_tasks: create_directories.yml
    - import_tasks: pg_initdb.yml
    - import_tasks: pg_set_superuser_password.yml
  become: yes

- name: Configure ssl based on pg_ssl parameter
  block:
    - import_tasks: pg_ssl_check.yml
    - import_tasks: pg_ssl_config.yml
  become: yes
  when:
     - pg_ssl

- name: Reset force_initdb based on the user input
  set_fact:
    force_initdb: false
