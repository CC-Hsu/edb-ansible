---
- name: check if we have ca key exists or not
  stat:
    path: "{{ pg_data }}/ca_key.key"
  become: yes
  register: ssl_ca_key

- name: check if we have ca certificate exists or not
  stat:
    path: "{{ pg_data }}/ca_certificate.crt"
  become: yes
  register: ssl_ca_certificate

- name: check if we have root.crt exists or not
  stat:
    path: "{{ pg_data }}/root.crt"
  become: yes
  register: ssl_root_crt

- name: check if we have root crl exists or not
  stat:
    path: "{{ pg_data }}/root.crl"
  become: yes
  register: ssl_root_crl

- name: check if we have server.key exists or not
  stat:
    path: "{{ pg_data }}/server.key"
  become: yes
  register: ssl_server_key

- name: check if we have server.crt exists or not
  stat:
    path: "{{ pg_data }}/server.crt"
  become: yes
  register: ssl_server_crt

- name: create ssl extension in pg_database
  postgresql_ext:
    name: sslutils
    login_user: "{{ pg_owner }}"
    port: "{{ pg_port }}"
    login_unix_socket: "{{ pg_unix_socket_directories[0] }}"
    db: "{{ pg_database }}"
    state: present
  become: yes
  become_user: "{{ pg_owner }}"
