---

- name: Create EFM properties File
  copy:
    src: /etc/edb/efm-{{ EFM_VERSION }}/efm.properties.in
    dest: /etc/edb/efm-{{ EFM_VERSION }}/efm.properties
    owner: "{{ PG_EFM_USER }}"
    group: "{{ PG_EFM_USER }}"
    remote_src: yes
  become: yes

- name: Create EFM nodes File
  copy:
    src: /etc/edb/efm-{{ EFM_VERSION }}/efm.nodes.in
    dest: /etc/edb/efm-{{ EFM_VERSION }}/efm.nodes
    owner: "{{ PG_EFM_USER }}"
    group: "{{ PG_EFM_USER }}"
    remote_src: yes
  become: yes

- name: Generate EFM encrypted Password
  shell: |
   /usr/edb/efm-{{ EFM_VERSION }}/bin/efm encrypt efm --from-env
   touch /etc/edb/efm-{{ EFM_VERSION }}/.efmpass
  args:
    creates: "/etc/edb/efm-{{ EFM_VERSION }}/.efmpass"
    executable: /bin/bash
  environment:
    EFMPASS: "{{ PG_EFM_USER_PASSWORD }}"
  register: pass_opt

- name: Update EFM efm.properties File
  lineinfile:
    path: /etc/edb/efm-{{ EFM_VERSION }}/efm.properties
    regexp: "{{ line_item.name + '=' }}"
    line: "{{ line_item.name + '=' + line_item.value|string }}"
  with_items:
        - { name: db.user, value: "{{ PG_EFM_USER }}"}
        - { name: db.password.encrypted, value: "{{ pass_opt.stdout }}"}
        - { name: db.port, value: "{{ PG_PORT }}"}
        - { name: db.database, value: "{{ PG_EFM_DATABASE }}"}
        - { name: db.service.owner, value: "{{ PG_OWNER }}"}
        - { name: db.service.name, value: "{{ PG_SERVICE }}"}
        - { name: db.bin, value: "{{ PG_BIN_PATH }}"}
        - { name: db.recovery.dir, value: "{{ PG_DATA }}"}
        - { name: db.data.dir, value: "{{ PG_DATA }}"}
        - { name: user.email, value: "{{ EFM_NOTIFICATION_EMAIL }}"}
        - { name: auto.allow.hosts, value: true}
        - { name: stable.nodes.file, value: true}
        - { name: bind.address, value: "{{ item.value.private_ip }}:7800"}
        - { name: is.witness, value: "{{ EFM_WITNESS }}" }
        - { name: application.name, value: "{{ item.key }}" }
        - { name: update.physical.slots.period, value: "10" }
  loop_control:
    loop_var: line_item
  become: yes

- name: Update private IPs in efm.nodes file
  blockinfile:
    path: /etc/edb/efm-{{ EFM_VERSION }}/efm.nodes
    block: |
        {{ EFM_NODES_LIST }}
  become: yes

- name: Start EFM service
  systemd:
    name: "{{ EFM_SERVICE }}"
    enabled: yes
    state: started
  become: yes

- name: Allow efm node on all the host
  shell: |
    set -o pipefail
    set -eu
    for ip_address in {{ ALL_NODE_IPS|join(' ') }}
    do
      /usr/edb/efm-{{ EFM_VERSION }}/bin/efm allow-node efm ${ip_address}
    done
    rm -f /etc/edb/efm-{{ EFM_VERSION }}/.allowed
  args:
    creates: "/etc/edb/efm-{{ EFM_VERSION }}/.allowed"
    executable: /bin/bash
  register: output
