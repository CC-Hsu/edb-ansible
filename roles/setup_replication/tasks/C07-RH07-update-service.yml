---
- name: Check if we have the service file already created
  stat:
    path: "/etc/systemd/system/{{ PG_SERVICE }}.service"
  become: yes
  register: service_file

- name: Copy postgres service file
  copy:
    src: "/usr/lib/systemd/system/{{ PG_SERVICE }}.service"
    dest: "/etc/systemd/system/"
    remote_src: yes
  when: not service_file.stat.exists
  become: yes

- name: Update Postgres Service File
  lineinfile:
    path: "/etc/systemd/system/{{ PG_SERVICE }}.service"
    regexp: "{{ line_item.From }}"
    line: "{{ line_item.To }}"
  with_items:
    - { From: 'Environment=PGDATA={{ PG_DEFAULT_DATA }}', To: 'Environment=PGDATA={{ PG_DATA }}'}
    - { From: 'PIDFile={{ PG_DEFAULT_DATA }}/postmaster.pid', To: 'PIDFile={{ PG_DATA }}/postmaster.pid'}
  loop_control:
    loop_var: line_item
  become: yes
  register: service_changed

- name: Start the PG Service
  systemd:
      name: "{{ PG_SERVICE }}"
      daemon_reload: yes
      state: started
  become: yes

- name: Restart the PG Service
  systemd:
      name: "{{ PG_SERVICE }}"
      daemon_reload: yes
      state: restarted
  become: yes
  when: service_changed.changed
