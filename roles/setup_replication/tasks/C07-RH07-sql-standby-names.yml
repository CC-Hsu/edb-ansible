- name: Set query if snchronous_standby_names is not empty
  set_fact:
      sql_query: "WITH synchronous_standby_string AS (
    SELECT
        pg_catalog.current_setting('synchronous_standby_names') AS parameter,
        CASE WHEN pg_catalog.current_setting('synchronous_standby_names')
        LIKE '%(%'
            AND pg_catalog.current_setting('synchronous_standby_names')
            LIKE '%)%' THEN
            split_part(split_part(pg_catalog.current_setting('synchronous_standby_names'), ')', 1), '(', 2)
        ELSE
            pg_catalog.current_setting('synchronous_standby_names')
        END AS sync_standby_list
),
number_sync_standbys AS (
    SELECT
        parameter,
        split_part(split_part(parameter, '(', 1), ' ', 2) AS number_of_synchoronous
    FROM
        synchronous_standby_string
),
new_standby_list AS (
    SELECT
        parameter,
        sync_standby_list AS old_list,
        CASE WHEN length(sync_standby_list) > 0
            AND NOT ARRAY['{{ item.key }}'] && string_to_array(sync_standby_list, ',') THEN
            sync_standby_list || ',' || '{{ item.key }}'
        WHEN length(sync_standby_list) > 0
            AND ARRAY['{{ item.key }}'] && string_to_array(sync_standby_list, ',') THEN
            sync_standby_list
        ELSE
            '{{ item.key }}'
        END AS new_list,
        CASE WHEN number_of_synchoronous ~ '^[0-9]+$' THEN
            ' ' || number_of_synchoronous
        ELSE
            ''
        END AS old_number,
        CASE WHEN number_of_synchoronous ~ '^[0-9]+$'
            AND NOT ARRAY['{{ item.key }}'] &&  string_to_array(sync_standby_list, ',') THEN
            ' ' || (number_of_synchoronous::integer + 1)::text
        WHEN number_of_synchoronous ~ '^[0-9]+$'
            AND ARRAY['{{ item.key }}'] && string_to_array(sync_standby_list, ',') THEN
            ' ' || number_of_synchoronous::text
        ELSE
            ''
        END AS new_number
    FROM
        synchronous_standby_string
        JOIN number_sync_standbys USING (parameter))
SELECT
    replace(replace(parameter, old_list, new_list), old_number::text, new_number::text) AS new_setting
FROM
    new_standby_list
WHERE
    length(parameter) > 0"

  register: output
