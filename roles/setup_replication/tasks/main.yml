---
# tasks file for edb.postgres.install role

# reference epas variables
- name: reference epas variables
  include_vars: "{{ pg_type }}.yml"

# display if the operating system is supported
- name: display support for operating system
  block:
    - debug:
        msg: "operating system = {{ os }} not supported."
  when: os not in supported_os

# display if the database version is not supported
- name: display supported versions for database engine
  block:
    - debug:
        msg: "database engine version = {{ pg_version }} not supported."
  when: pg_version not in supported_pg_version

# end playbook if the type of install, operating system or postgres version are not supported
- meta: end_play
  when: os not in supported_os or
        pg_version not in supported_pg_version

- name: Prepare etc_hosts_lists
  set_fact:
    etc_hosts_lists: "{{ etc_hosts_lists + [item.value.private_ip + ' ' + item.value.hostname] }}"
  when: item.value.hostname is defined
  with_dict: "{{ servers }}"

- name: Get the primary information
  set_fact:
    primary_private_ip: "{{ item.value.private_ip }}"
    primary_public_ip: "{{ item.value.public_ip }}"
  when: item.value.node_type == 'primary'
  with_dict: "{{ servers }}"

- name: Get primary hostname
  set_fact:
    primary_host_name: "{{ item.value.hostname }}"
  when:
    - item.value.hostname is defined
    - item.value.node_type == 'primary'
  with_dict: "{{ servers }}"

- name: Prepare slot names array
  include_tasks: prepare_standby_slots_list.yml
  when: item.value.node_type == 'standby'
  with_dict: "{{ servers }}"

- name: Prepare host ip lists based on allow_node_ips
  include_tasks: prepare_hba_value_list.yml
  when: item.value.node_type in ['primary','standby']
  with_dict: "{{ servers }}"

- name: Prepare synchronous_standby_names
  set_fact:
    synchronous_standbys: "{{ synchronous_standbys + [item.key] }}"
  when:
    - item.value.node_type == 'standby'
    - item.value.replication_type == 'synchronous'
  with_dict: "{{ servers }}"

- name: Update primary for replication
  import_tasks: primary_settings.yml
  delegate_to: "{{ primary_public_ip }}"

- name: Include the setup_replication
  include_tasks: setup_replication.yml
  when: item.value.node_type == 'standby'
  with_dict:  "{{ servers }}"

- name: Update primary for replication
  import_tasks: primary_synchronous_param.yml
  when: synchronous_standbys|length > 0
  delegate_to: "{{ primary_public_ip }}"

- name: Reset the the variables based on the user input
  set_fact:
      primary_private_ip: ""
      primary_public_ip: ""
      primary_host_name: ""
      standby_names: []
      pg_allow_ip_addresses: []
      standby_physical_slots: []
      etc_hosts_lists: []
  register: output
