---

- name: check if agent key was registered
  stat:
    path: "{{ pem_agent_bin_path }}/../etc/.{{ item.key }}registered"
  become: yes
  register: server_registered

- name: register server with agent
  shell: |
    set -o pipefail
    set -eu
    PEM_SERVER_PASSWORD={{ pg_pem_admin_password }} \
    PEM_MONITORED_SERVER_PASSWORD={{ pg_pem_agent_password }} \
    {{ pem_agent_bin_path }}/pemworker \
        --register-server \
        --display-name {{ item.key }} \
        --pem-user {{ pg_pem_admin_user }} \
        --server-addr {{ item.value.private_ip }} \
        --server-port {{ pg_port }} \
        --server-database {{ pg_database }} \
        --server-user {{ pg_user }} \
        --server-service-name {{ pg_service }} \
        --efm-cluster-name efm  \
        --efm-install-path {{ efm_bin_path }} \
        --asb-host-name 127.0.0.1 \
        --asb-host-user {{ pg_pem_agent_user }} \
        --asb-ssl-mode prefer \
        --remote-monitoring no
  args:
    executable: /bin/bash
  register: output
  changed_when: "'Database Server registered with Postgres Enterprise Manager Server successfully!' in output.stdout"
  failed_when: "'Database Server registered with Postgres Enterprise Manager Server successfully!' not in output.stdout"
  when: not server_registered.stat.exists
  become: yes

- name: create lock file for avoiding duplication
  file:
    path: "{{ pem_agent_bin_path }}/../etc/.{{ item.key }}registered"
    state: touch
  when: not server_registered.stat.exists and output.changed
  become: yes
