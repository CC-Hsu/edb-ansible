---
# configure variables

# setting variables available for all nodes
- name: display current node to install
  block:
    - debug:
        msg:
            "operating system = {{ os }}:
             pg_type = {{ pg_type }},
             node type = {{ item.value.node_type }},
             pg_data = {{ pg_data }},
             public ip = {{ item.value.public_ip }}"


- name: update etc_hosts based on use_hostname
  block:
    - import_tasks: linux_update_etc_hosts.yml
  become: yes
  when:
    - use_hostname
  delegate_to: "{{ item.value.public_ip }}"

- name: set force_pem_install based on the user input
  set_fact:
    force_pem_install: "{{ item.value.force_pem_install }}"
  when: item.value.force_pem_install is defined
  register: output

- name: set pem_agent based on the user input
  set_fact:
    pem_agent: "{{ item.value.pem_agent }}"
  when: item.value.pem_agent is defined
  register: output

- name: Remove pem server based on force_pem_install
  block:
    - import_tasks: rm_pem_server_install.yml
  when: force_pem_install
  become: yes
  delegate_to: "{{ item.value.public_ip }}"

- name: Install and configure postgres on centos7 or rhel7
  block:
    - import_tasks: pem_server_user.yml
    - import_tasks: pem_server_install.yml
    - import_tasks: pem_server_config.yml
    - import_tasks: pem_server_hba.yml
  when: item.value.node_type == 'pemserver'
  become: yes
  delegate_to: "{{ item.value.public_ip }}"

- name: Create pemagent user on primary
  import_tasks: pem_agent_user.yml
  when: item.value.node_type == 'primary'
  become: yes
  delegate_to: "{{ item.value.public_ip }}"

- name: Install and configure postgres on centos7 or rhel7
  block:
    - import_tasks: pem_agent_install.yml
    - import_tasks: pem_agent_config.yml
  when:
    - item.value.node_type != 'pemserver'
    - pem_agent
  become: yes
  delegate_to: "{{ item.value.public_ip }}"

- name: Register database on primary and standby
  block:
    - import_tasks: pem_agent_hba.yml
    - import_tasks: pem_agent_register_db.yml
  when:
    - item.value.node_type in ['primary','standby']
    - pem_agent
  become: yes
  delegate_to: "{{ item.value.public_ip }}"

- name: Reset force/skip_pem_install based on the user input
  set_fact:
    pem_agent: false
    force_pem_install: false
  register: output
