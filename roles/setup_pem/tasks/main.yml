---
# tasks file for edb.postgres.install role

- name: reference ariables
  include_vars: "{{ pg_type }}.yml"

# display if the operating system is supported
- name: display support for operating system
  block:
    - debug:
        msg: "operating system = {{ os }} not supported."
  when: os not in supported_os

# display if the operating system is supported
- name: display support for operating system
  block:
    - debug:
        msg: "epas/pg version = {{ os }} not supported. only '10', '11' and '12'."
  when: pg_version|int not in supported_pg_version

# end playbook if the type of install, operating system or postgres version are not supported
- meta: end_play
  when: os not in supported_os or
        pg_version|int not in supported_pg_version

- name: Prepare etc_hosts_lists
  set_fact:
    etc_hosts_list: "{{ etc_hosts_lists + [item.value.private_ip + ' ' + item.value.hostname] }}"
  when:
    - item.value.hostname is defined
    - use_hostname
  with_dict: "{{ servers }}"

- name: Get the pem_server_private/public_ip
  set_fact:
    pem_server_private_ip: "{{ item.value.private_ip }}"
    pem_server_public_ip: "{{ item.value.public_ip }}"
  when: item.value.node_type == 'pemserver'
  with_dict: "{{ servers }}"

- name: Get the primary_private/public_ip
  set_fact:
    primary_private_ip: "{{ item.value.private_ip }}"
    primary_public_ip: "{{ item.value.public_ip }}"
  when: item.value.node_type == 'primary'
  with_dict: "{{ servers }}"

- name: Prepare hba host ip lists
  include_tasks: prepare_hba_value_list.yml
  when: item.value.node_type in ['primary','standby']
  with_dict: "{{ servers }}"

- name: Execute setup_pem for all nodes
  include_tasks: setup_pem.yml
  with_dict: "{{ servers }}"

- name: Update pem probes and alerts
  import_tasks: pem_server_probe_alert.yml
  delegate_to: "{{ pem_server_public_ip }}"

- name: Reset the variables
  set_fact:
    pem_server_private_ip: ""
    pem_server_public_ip: ""
    primary_private_ip: ""
    primary_public_ip: ""
    etc_hosts_lists: []
    input_password: ""
    pg_allow_ip_addresses: []
    pem_server_hba_local_entry: []
    pem_agent_hba_local_entry: []
