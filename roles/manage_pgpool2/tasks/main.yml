---
# Tasks file for manage_pgpool2 Role

- name: Set the os variable
  set_fact:
    os: "{{ ansible_distribution | replace('Red Hat Enterprise Linux', 'RHEL') }}{{ ansible_distribution_major_version }}"

# reference EPAS/PG variables
- name: Reference pg_type variables
  include_vars: "{{ pg_type }}.yml"

# Include EPAS/PG variables from the initdb_server role
- name: Reference pg_type variables
  include_vars: "../../init_dbserver/vars/{{ pg_type }}.yml"

# Check if the Operating System is supported
- name: Check support for Operating System
  fail:
    msg: "Operating System = {{ os }} not supported."
  when: os not in supported_os

# Check if the Database Version is supported
- name: Check supported versions for Database engine
  fail:
    msg: "Database Engine Version = {{ pg_version }} not supported.
          Supported versions are {{ supported_pg_version }}"
  when: pg_version|int not in supported_pg_version

# Check if the pgpoolII version is supported when working with EPAS env.
- name: Check supported versions for pgpoolII
  fail:
    msg: "pgpoolII Version = {{ pgpool2_version }} not supported.
          Supported versions are {{ supported_pgpool2_version }}"
  when:
    - pg_type == "EPAS"
    - pgpool2_version not in supported_pgpool2_version

# Set service name accordingly to pg_type
- name: Set service name
  set_fact:
    pgpool2_service_name: >-
      {% if pg_type == 'EPAS' %}edb-pgpool-{{ pgpool2_version }}{% elif pg_type == 'PG' %}pgpool-II-{{ pg_version }}{% endif %}

- name: Include the pgpool2_manage_configuration
  include_tasks: pgpool2_manage_configuration.yml
  when:
    - pgpool2_configuration|length > 0
  vars:
    pgpool2_configuration_lines: "{{ pgpool2_configuration }}"

- name: Include the pgpool2_manage_users
  include_tasks: pgpool2_manage_users.yml
  when:
    - pgpool2_users|length > 0

- name: Reload pgpoolII service
  systemd:
    name: "{{ pgpool2_service_name }}"
    state: reloaded
  when:
    - pgpool2_user|length > 0 or pgpool2_configuration|length > 0
